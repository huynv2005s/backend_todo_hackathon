generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  name      String?
  avatarUrl String?
  // login bằng Google -> bạn có thể lưu googleId nếu muốn
  googleId  String? @unique

  boards        Board[]       @relation("UserBoards")
  boardMembers  BoardMember[]
  comments      Comment[]
  tasksAssigned Task[]        @relation("TaskAssignee")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Board {
  id        String        @id @default(cuid())
  title     String
  ownerId   String
  owner     User          @relation("UserBoards", fields: [ownerId], references: [id])
  columns   Column[]
  members   BoardMember[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model BoardMember {
  id      String @id @default(cuid())
  userId  String
  boardId String
  role    String // "admin" | "member" | "viewer"

  user  User  @relation(fields: [userId], references: [id])
  board Board @relation(fields: [boardId], references: [id])

  createdAt DateTime @default(now())

  @@unique([userId, boardId])
}

model Column {
  id        String   @id @default(cuid())
  title     String
  boardId   String
  position  Int // để sắp xếp và kéo thả column trong board
  board     Board    @relation(fields: [boardId], references: [id])
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([boardId, position]) // mỗi column trong board có vị trí riêng
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  columnId    String
  position    Int // để kéo thả trong column
  dueDate     DateTime?
  // createdById String
  assigneeId  String?

  column    Column    @relation(fields: [columnId], references: [id])
  assignee  User?     @relation("TaskAssignee", fields: [assigneeId], references: [id])
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([columnId, position]) // position duy nhất trong 1 column
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  taskId    String
  userId    String
  task      Task     @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
